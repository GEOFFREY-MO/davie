// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  category    String
  image       String
  stock       Int      @default(0)
  featured    Boolean  @default(false)
  bestSeller  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id              String      @id @default(cuid())
  customerName    String
  customerEmail   String
  customerPhone   String
  total           Float
  status          OrderStatus @default(PENDING)
  shippingAddress String
  paymentMethod   PaymentMethod
  paymentStatus   PaymentStatus @default(PENDING)
  trackingNumber  String?
  notes           String?
  estimatedDelivery DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  userId          String?
  user            User?       @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id          String  @id @default(cuid())
  productId   String
  productName String
  productImage String
  quantity    Int
  price       Float
  total       Float
  orderId     String
  order       Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product @relation(fields: [productId], references: [id])
}

model Offer {
  id                 String         @id @default(cuid())
  title              String
  description        String
  discountPercentage Int
  startDate          DateTime
  endDate            DateTime
  status             OfferStatus    @default(ACTIVE)
  targetAudience     TargetAudience @default(ALL)
  minimumPurchase    Float?
  maximumDiscount    Float?
  usageLimit         Int?
  usedCount          Int            @default(0)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
}

model Banner {
  id        String      @id @default(cuid())
  title     String
  imageUrl  String
  altText   String
  linkUrl   String?
  status    BannerStatus @default(ACTIVE)
  position  BannerPosition @default(HERO)
  startDate DateTime
  endDate   DateTime
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  MPESA
  CASH
  CARD
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

enum OfferStatus {
  ACTIVE
  INACTIVE
  SCHEDULED
}

enum TargetAudience {
  ALL
  NEW
  EXISTING
  VIP
}

enum BannerStatus {
  ACTIVE
  INACTIVE
}

enum BannerPosition {
  HERO
  SIDEBAR
  FOOTER
} 